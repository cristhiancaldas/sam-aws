AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'

Parameters:
  Stage:
    Type: String
    Description: Stage name to deploy resources to
    AllowedValues:
      - dev
      - qa
      - prod

  AppName:
     Type: String
     Default: app-user

Globals:
  Function:
    Runtime: java11
    Timeout: 60
    MemorySize: 512

Resources:

  UserDynamoTable:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      TableName: "USER_OPS"
      AttributeDefinitions:
        -   AttributeName: ID_USER_PK
            AttributeType: N
      KeySchema:
        -   AttributeName: ID_USER_PK
            KeyType: HASH

  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub "${Stage}-${AppName}-api"
      StageName: !Ref Stage
      TracingEnabled: true

  UserFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: UserFunctionApp
      CodeUri: "app"
      AutoPublishAlias: live
      Handler: app.bank.functions.UserFunction::handleRequest
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UserDynamoTable
      Events:
        GetUser:
          Type: Api
          Properties:
            Method: GET
            Path: /user
            RestApiId:
              Ref: ApiGatewayApi
        AddUser:
          Type: Api
          Properties:
            Method: POST
            Path: /user
            RestApiId:
              Ref: ApiGatewayApi
        GetValidate:
          Type: Api
          Properties:
            Method: GET
            Path: /validate
            RestApiId:
              Ref: ApiGatewayApi

  UserFunctionScalableTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: 4
      MinCapacity: 1
      ResourceId: !Sub function:${UserFunction}:live # You need to specify an alis or version here
      RoleARN: !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/lambda.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_LambdaConcurrency
      ScalableDimension: lambda:function:ProvisionedConcurrency
      ServiceNamespace: lambda
    DependsOn: UserFunctionAliaslive # This is your function logical ID + "Alias" + what you use for AutoPublishAlias

  UserFunctionTrackingScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: utilization
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref UserFunctionScalableTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 0.5 # I want to keep the utilization of my Provisioned Concurrency close to 70%, Any value between 0.1 and 0.9 can be used here
        PredefinedMetricSpecification:
          PredefinedMetricType: LambdaProvisionedConcurrencyUtilization

Outputs:
  MyApi:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/"

